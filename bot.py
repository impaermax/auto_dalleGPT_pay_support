import telebot
from telebot import types
import logging
from modules.database import Database
from modules.keyboards import Keyboards
from modules.recraft_image_generator import RecraftImageGenerator
from modules.admin import AdminModule
from modules.generation import GenerationModule
from modules.payment import PaymentModule

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TELEGRAM_BOT_TOKEN = '7937346503:AAGj7dW3lOMbfTv4XO0W-Jr_rPDB9b8sA_A'
RECRAFT_API_KEY = 'sk-UVIYsQxzj3FqmwuSB1yrYEOlOX1tmgK023Y8Lg4SgkEb5bkgW80DWAK8vbPM'
ADMIN_ID = 1200223081

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π
db = Database()
keyboards = Keyboards()
image_generator = RecraftImageGenerator(RECRAFT_API_KEY)
admin_module = AdminModule(bot, db, keyboards, ADMIN_ID)
generation_module = GenerationModule(bot, db, keyboards, image_generator)
payment_module = PaymentModule(bot, db, keyboards)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    user_id = message.from_user.id
    username = message.from_user.username
    
    if not db.get_user(user_id):
        db.add_user(user_id, username)
        bot.send_message(
            ADMIN_ID,
            f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}",
            reply_markup=keyboards.registration_decision_keyboard(user_id)
        )
        bot.send_message(
            message.chat.id,
            "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!",
            reply_markup=types.ReplyKeyboardRemove()
        )
    else:
        bot.send_message(
            message.chat.id,
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=keyboards.main_keyboard()
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏
@bot.message_handler(func=lambda msg: msg.text == 'üÜò –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞')
def handle_support(message):
    msg = bot.send_message(message.chat.id, "–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É:")
    bot.register_next_step_handler(msg, process_support_request)

def process_support_request(message):
    user_id = message.from_user.id
    db.add_support_ticket(user_id, message.text)
    bot.send_message(
        ADMIN_ID,
        f"–ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username}:\n{message.text}",
        reply_markup=keyboards.support_response_keyboard(user_id)
    )
    bot.send_message(message.chat.id, "‚úÖ –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", reply_markup=keyboards.main_keyboard())

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏–∑ –º–æ–¥—É–ª–µ–π
admin_module.register_handlers()
generation_module.register_handlers()
payment_module.register_handlers()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    bot.infinity_polling()
